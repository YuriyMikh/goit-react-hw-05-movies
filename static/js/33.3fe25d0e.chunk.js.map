{"version":3,"file":"static/js/33.3fe25d0e.chunk.js","mappings":"+PAGaA,EAAkBC,EAAAA,GAAAA,IAAH,wDAKfC,EAAaD,EAAAA,GAAAA,IAAH,yCAIVE,EAAaF,EAAAA,GAAAA,GAAH,6EAMVG,EAAaH,EAAAA,GAAAA,GAAH,gDAKVI,EAAiBJ,EAAAA,GAAAA,EAAH,gDAIdK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,oT,SCwDvB,EAvEqB,WAAO,IAAD,EACjBO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,IAhBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GAASS,MAAK,SAAAC,GAC5BC,QAAQC,IAAIF,GAEZ,IAAQG,EAAuDH,EAAvDG,MAAOC,EAAgDJ,EAAhDI,YAAaC,EAAmCL,EAAnCK,aAAcC,EAAqBN,EAArBM,SAAUC,EAAWP,EAAXO,OAEpDb,EAAgB,CACdc,MAAM,uCAAD,OAAyCJ,GAC9CD,MAAAA,EACAM,MAAsB,GAAfJ,EACPC,SAAAA,EACAC,OAAAA,GAEH,GACF,GAAE,CAACjB,IAECG,EAAL,CAIA,IAAQe,EAA0Cf,EAA1Ce,MAAOL,EAAmCV,EAAnCU,MAAOM,EAA4BhB,EAA5BgB,MAAOH,EAAqBb,EAArBa,SAAUC,EAAWd,EAAXc,OAEvC,OACE,iCACE,SAACnB,EAAD,CAAYsB,IAAY,OAARf,QAAQ,IAARA,GAAA,UAAAA,EAAUgB,aAAV,eAAiBC,OAAQ,IAAzC,sBACA,UAAC9B,EAAD,YACE,SAACE,EAAD,CAAY6B,IAAKL,EAAOM,IAAKX,KAC7B,4BACE,wBAAKA,KACL,+CAAgBM,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOM,QAAQ,GAA/B,QACA,sCACA,uBAAIT,KACJ,oCACA,SAACrB,EAAD,iBACGsB,QADH,IACGA,OADH,EACGA,EAAQS,KAAI,SAAAC,GAAI,OACf,SAAC/B,EAAD,UAA2B+B,EAAKC,MAAfD,EAAKE,GADP,aAMvB,mBACA,SAAChC,EAAD,sCACA,UAACF,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAMyB,MAAOhB,EAASgB,MAAOD,GAAG,OAAhC,qBAIF,SAACxB,EAAD,WACE,SAAC,KAAD,CAAMyB,MAAOhB,EAASgB,MAAOD,GAAG,UAAhC,2BAKJ,mBACA,SAAC,KAAD,MArCH,CA8CF,C,+LC/EKU,EAAU,mCAGHC,EAAmB,mCAAG,+GAERC,EAAAA,EAAAA,IAAA,kEACsCF,IAH9B,uBAEvBG,EAFuB,EAEvBA,KAFuB,kBAKxBA,EAAKC,SALmB,gCAO/BvB,QAAQC,IAAR,MAP+B,yDAAH,qDAYnBJ,EAAe,mCAAG,WAAMqB,GAAN,kGAEJG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,oBAC+BC,IAH3B,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3BtB,QAAQC,IAAR,MAP2B,yDAAH,sDAYfuB,EAAoB,mCAAG,WAAMC,GAAN,kGAETJ,EAAAA,EAAAA,IAAA,0DAC8BI,EAD9B,oBAC+CN,EAD/C,+CAFS,uBAExBG,EAFwB,EAExBA,KAFwB,kBAKzBA,EAAKC,SALoB,gCAOhCvB,QAAQC,IAAR,MAPgC,yDAAH,sDAYpByB,EAAc,mCAAG,WAAMR,GAAN,kGAEHG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAHpC,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BtB,QAAQC,IAAR,MAP0B,yDAAH,sDAYd0B,EAAgB,mCAAG,WAAMT,GAAN,kGAELG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAHlC,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BtB,QAAQC,IAAR,MAP4B,yDAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FilmInfoWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const FilmBanner = styled.img`\n  width: 250px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const GenresItem = styled.li`\n  padding: 5px ;\n    \n`;\n\nexport const AdditionalInfo = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const ButtonBack = styled(Link)`\n  display: block;\n  max-width: 80px;\n  margin-bottom: 10px;\n  /* border-radius: 8px; */\n  padding: 3px 12px;\n  /* border: 1px solid black; */\n  /* background-color: rgb(255, 170, 170); */\n  &:hover {\n    cursor: pointer;\n    /* background-color: rgb(255, 240, 240); */\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesByID } from 'services/api/api';\nimport {\n  AdditionalInfo,\n  ButtonBack,\n  FilmBanner,\n  FilmInfoWrapper,\n  GenresItem,\n  GenresList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieID } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMoviesByID(movieID).then(response => {\n      console.log(response);\n\n      const { title, poster_path, vote_average, overview, genres } = response;\n\n      setMovieDetails({\n        photo: `https://image.tmdb.org/t/p/original/${poster_path}`,\n        title,\n        votes: vote_average * 10,\n        overview,\n        genres,\n      });\n    });\n  }, [movieID]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const { photo, title, votes, overview, genres } = movieDetails;\n\n  return (\n    <>\n      <ButtonBack to={location?.state?.from || '/'}>Go back</ButtonBack>\n      <FilmInfoWrapper>\n        <FilmBanner src={photo} alt={title} />\n        <div>\n          <h2>{title}</h2>\n          <p>User score: {votes?.toFixed(2)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres?.map(item => (\n              <GenresItem key={item.id}>{item.name}</GenresItem>\n            ))}\n          </GenresList>\n        </div>\n      </FilmInfoWrapper>\n      <hr />\n      <AdditionalInfo>Additional information</AdditionalInfo>\n      <GenresList>\n        <GenresItem>\n          <Link state={location.state} to=\"cast\">\n            Cast\n          </Link>\n        </GenresItem>\n        <GenresItem>\n          <Link state={location.state} to=\"reviews\">\n            Reviews\n          </Link>\n        </GenresItem>\n      </GenresList>\n      <hr />\n      <Outlet />\n    </>\n\n    // <>\n    //   <h2>Это файл movieDetails.jsx, айдишник - {movieID}</h2>\n    //   <div>{movieDetails.id}</div>\n    //   <div>Overview: {movieDetails.overview}</div>\n    // </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '3969575b7b3cc6462971102333f767aa';\n\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMoviesByID = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//поиск кинофильма по ключевому слову на странице фильмов.\nexport const fetchMoviesByKeyword = async query => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об актерском составе\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об отзывах о фильме\nexport const fetchMovieReview = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["FilmInfoWrapper","styled","FilmBanner","GenresList","GenresItem","AdditionalInfo","ButtonBack","Link","movieID","useParams","useState","movieDetails","setMovieDetails","location","useLocation","useEffect","fetchMoviesByID","then","response","console","log","title","poster_path","vote_average","overview","genres","photo","votes","to","state","from","src","alt","toFixed","map","item","name","id","API_KEY","fetchTrendingMovies","axios","data","results","fetchMoviesByKeyword","query","fetchMovieCast","fetchMovieReview"],"sourceRoot":""}