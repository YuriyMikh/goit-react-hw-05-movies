{"version":3,"file":"static/js/779.a232f2fc.chunk.js","mappings":"wOAEaA,EAAaC,EAAAA,GAAAA,GAAH,uGAOVC,EAAgBD,EAAAA,GAAAA,EAAH,+C,kBCwB1B,EA5BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAOA,OALFC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAKC,QAAnB,GACpC,GAAE,CAACT,IAGEG,EAAOO,OAAS,EACX,6CAIT,+BAEE,SAACb,EAAD,UACGM,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,qCAAaF,MACb,SAACb,EAAD,UAAgBc,MAFTC,EADC,OASnB,C,+LC7BKC,EAAU,mCAGHC,EAAmB,mCAAG,+GAERC,EAAAA,EAAAA,IAAA,kEACsCF,IAH9B,uBAEvBP,EAFuB,EAEvBA,KAFuB,kBAKxBA,EAAKC,SALmB,gCAO/BS,QAAQC,IAAR,MAP+B,yDAAH,qDAYnBC,EAAe,mCAAG,WAAMN,GAAN,kGAEJG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,oBAC+BC,IAH3B,uBAEnBP,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3BU,QAAQC,IAAR,MAP2B,yDAAH,sDAYfE,EAAoB,mCAAG,WAAMC,GAAN,kGAETL,EAAAA,EAAAA,IAAA,0DAC8BK,EAD9B,oBAC+CP,EAD/C,+CAFS,uBAExBP,EAFwB,EAExBA,KAFwB,kBAKzBA,EAAKC,SALoB,gCAOhCS,QAAQC,IAAR,MAPgC,yDAAH,sDAYpBI,EAAc,mCAAG,WAAMT,GAAN,kGAEHG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAHpC,uBAElBP,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BU,QAAQC,IAAR,MAP0B,yDAAH,sDAYdb,EAAgB,mCAAG,WAAMQ,GAAN,kGAELG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BACuCC,IAHlC,uBAEpBP,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BU,QAAQC,IAAR,MAP4B,yDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 0 20px;\n`;\n\nexport const ReviewContent = styled.p`\n  padding-left: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewContent, ReviewList } from './Reviews.styled';\nimport { fetchMovieReview } from 'services/api/api';\n\nconst Reviews = () => {\n  const { movieID } = useParams();\n    const [review, setReview] = useState([]);\n    \n  useEffect(() => {\n    fetchMovieReview(movieID).then(data => setReview(data.results));\n  }, [movieID]);\n    \n    \n    if (review.length < 1) {\n      return \"We don't have any reviews for this movie.\";\n    }\n\n  return (\n    <>\n      {/* {review ? null : <p>We don't find review for this film!</p>} */}\n      <ReviewList>\n        {review.map(({ author, content, id }) => (\n          <li key={id}>\n            <h5>Author: {author}</h5>\n            <ReviewContent>{content}</ReviewContent>\n          </li>\n        ))}\n      </ReviewList>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '3969575b7b3cc6462971102333f767aa';\n\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMoviesByID = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//поиск кинофильма по ключевому слову на странице фильмов.\nexport const fetchMoviesByKeyword = async query => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об актерском составе\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об отзывах о фильме\nexport const fetchMovieReview = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ReviewList","styled","ReviewContent","movieID","useParams","useState","review","setReview","useEffect","fetchMovieReview","then","data","results","length","map","author","content","id","API_KEY","fetchTrendingMovies","axios","console","log","fetchMoviesByID","fetchMoviesByKeyword","query","fetchMovieCast"],"sourceRoot":""}