{"version":3,"file":"static/js/387.8e5c4ad0.chunk.js","mappings":"0OAEaA,EAAWC,EAAAA,GAAAA,GAAH,2EAMRC,EAAWD,EAAAA,GAAAA,GAAH,iRAYRE,EAAYF,EAAAA,GAAAA,IAAH,sD,kBCiBtB,EAhCa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJFC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKL,KAAjB,GAClC,GAAE,CAACH,IAEEG,EAAKM,OAAS,EACT,yDAIT,SAACb,EAAD,UACGO,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACR,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,IACED,EAAY,8CAC+BA,GACvC,wEAENE,IAAKH,KAEP,uBAAIA,KACJ,uCAAeD,OAVFD,EADP,KAgBf,C,+LCjCKM,EAAU,mCAGHC,EAAmB,mCAAG,+GAERC,EAAAA,EAAAA,IAAA,kEACsCF,IAH9B,uBAEvBT,EAFuB,EAEvBA,KAFuB,kBAKxBA,EAAKY,SALmB,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,qDAYnBC,EAAe,mCAAG,WAAMZ,GAAN,kGAEJQ,EAAAA,EAAAA,IAAA,6CACiBR,EADjB,oBAC+BM,IAH3B,uBAEnBT,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3Ba,QAAQC,IAAR,MAP2B,yDAAH,sDAYfE,EAAoB,mCAAG,WAAMC,GAAN,kGAETN,EAAAA,EAAAA,IAAA,0DAC8BM,EAD9B,oBAC+CR,EAD/C,+CAFS,uBAExBT,EAFwB,EAExBA,KAFwB,kBAKzBA,EAAKY,SALoB,gCAOhCC,QAAQC,IAAR,MAPgC,yDAAH,sDAYpBhB,EAAc,mCAAG,WAAMK,GAAN,kGAEHQ,EAAAA,EAAAA,IAAA,6CACiBR,EADjB,4BACuCM,IAHpC,uBAElBT,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1Ba,QAAQC,IAAR,MAP0B,yDAAH,sDAYdI,EAAgB,mCAAG,WAAMf,GAAN,kGAELQ,EAAAA,EAAAA,IAAA,6CACiBR,EADjB,4BACuCM,IAHlC,uBAEpBT,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5Ba,QAAQC,IAAR,MAP4B,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  padding: 10px 10px 30px 10px;\n  max-width: calc((100% - 5 * 32px) / 6);\n  color: #000;\n  border: 1px solid black;\n  /* background-color: rgb(255, 230, 230); */\n  border-radius: 5px;\n`;\n\nexport const CastPhoto = styled.img`\n  /* border-radius: 15px; */\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastItem, CastList, CastPhoto } from './Cast.styled';\nimport { fetchMovieCast } from 'services/api/api';\n\nconst Cast = () => {\n  const { movieID } = useParams();\n    const [cast, setCast] = useState([]);\n    \n  useEffect(() => {\n    fetchMovieCast(movieID).then(data => setCast(data.cast));\n  }, [movieID]);\n    \n    if (cast.length < 1) {\n      return \"We don't have any casting information for this movie.\";\n    }\n    \n  return (\n    <CastList>\n      {cast.map(({ id, character, name, profile_path }) => (\n        <CastItem key={id}>\n          <CastPhoto\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/original/${profile_path}`\n                : 'https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png'\n            }\n            alt={name}\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '3969575b7b3cc6462971102333f767aa';\n\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMoviesByID = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//поиск кинофильма по ключевому слову на странице фильмов.\nexport const fetchMoviesByKeyword = async query => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об актерском составе\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об отзывах о фильме\nexport const fetchMovieReview = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["CastList","styled","CastItem","CastPhoto","movieID","useParams","useState","cast","setCast","useEffect","fetchMovieCast","then","data","length","map","id","character","name","profile_path","src","alt","API_KEY","fetchTrendingMovies","axios","results","console","log","fetchMoviesByID","fetchMoviesByKeyword","query","fetchMovieReview"],"sourceRoot":""}