{"version":3,"file":"static/js/199.e5e0756e.chunk.js","mappings":"2MAGaA,EAAO,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACfC,GAAWC,EAAAA,EAAAA,MAGjB,OADAC,QAAQC,IAAIJ,IAEV,4BACE,mBAEA,wBACGA,EAAOK,KAAI,SAAAC,GAAI,OACd,yBAEE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAKE,GAAGC,YACvBC,MAAO,CAAEC,KAAMV,GAFjB,SAIGK,EAAKM,SANDN,EAAKE,GADA,QAcvB,C,8ECGD,UAxBiB,WAEf,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAWA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GAEzBJ,EAAUI,EACX,GACF,GAAE,KAGD,iCACE,4CAEA,0BACE,SAAC,IAAD,CAAMlB,OAAQA,QAIrB,C,+LCzBKmB,EAAU,mCAGHH,EAAmB,mCAAG,+GAERI,EAAAA,EAAAA,IAAA,kEACsCD,IAH9B,uBAEvBE,EAFuB,EAEvBA,KAFuB,kBAKxBA,EAAKC,SALmB,gCAO/BnB,QAAQC,IAAR,MAP+B,yDAAH,qDAYnBmB,EAAe,mCAAG,WAAMf,GAAN,kGAEJY,EAAAA,EAAAA,IAAA,6CACiBZ,EADjB,oBAC+BW,IAH3B,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3BlB,QAAQC,IAAR,MAP2B,yDAAH,sDAYfoB,EAAoB,mCAAG,WAAMC,GAAN,kGAETL,EAAAA,EAAAA,IAAA,0DAC8BK,EAD9B,oBAC+CN,EAD/C,+CAFS,uBAExBE,EAFwB,EAExBA,KAFwB,kBAKzBA,EAAKC,SALoB,gCAOhCnB,QAAQC,IAAR,MAPgC,yDAAH,sDAYpBsB,EAAc,mCAAG,WAAMlB,GAAN,kGAEHY,EAAAA,EAAAA,IAAA,6CACiBZ,EADjB,4BACuCW,IAHpC,uBAElBE,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BlB,QAAQC,IAAR,MAP0B,yDAAH,sDAYduB,EAAgB,mCAAG,WAAMnB,GAAN,kGAELY,EAAAA,EAAAA,IAAA,6CACiBZ,EADjB,4BACuCW,IAHlC,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BlB,QAAQC,IAAR,MAP4B,yDAAH,qD","sources":["components/List.jsx","pages/Homepage/Homepage.jsx","services/api/api.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const List = ({ movies }) => {\n  const location = useLocation();\n\n  console.log(movies);\n  return (\n    <div>\n      <br></br>\n\n      <ul>\n        {movies.map(item => (\n          <li key={item.id}>\n            {/* Надо чтоб значение в to={} было строка. Если придет число (например айдишник как тут), то работать не будет. Поэтому надо сделать интерполяцю через шаблонную строчку и привести в любом случае к строке */}\n            <Link\n              to={`/movies/${item.id.toString()}`}\n              state={{ from: location }}\n            >\n              {item.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n// import { NavLink, Outlet } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'services/api/api';\nimport { List } from 'components/List';\n\nconst Homepage = () => {\n\n  const [movies, setMovies] = useState([]);\n\n  // console.log(setMovies);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(response => {\n      // console.log(response);\n      setMovies(response);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n\n      <div>\n        <List movies={movies}/>\n      </div>\n    </>\n  );\n};\n\nexport default Homepage;\n","import axios from 'axios';\n\nconst API_KEY = '3969575b7b3cc6462971102333f767aa';\n\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMoviesByID = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//поиск кинофильма по ключевому слову на странице фильмов.\nexport const fetchMoviesByKeyword = async query => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об актерском составе\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//информация об отзывах о фильме\nexport const fetchMovieReview = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["List","movies","location","useLocation","console","log","map","item","to","id","toString","state","from","title","useState","setMovies","useEffect","fetchTrendingMovies","then","response","API_KEY","axios","data","results","fetchMoviesByID","fetchMoviesByKeyword","query","fetchMovieCast","fetchMovieReview"],"sourceRoot":""}